{
  "name": "Incoming Webhooks",
  "description": "Recompute external properties and emit events with Javascript logic whenever user is send to connector by webhook",
  "tags": ["incoming", "oneColumn"],
  "picture": "picture.png",
  "ui": false,
  "tabs": [
    {
      "title": "Code Editor",
      "url": "/admin.html",
      "size": "large",
      "setup": false,
      "workspace": true,
      "editable": true,
      "handler": "admin"
    }
  ],
  "readme": "readme.md",
  "version": "0.1.41-monorepo",
  "private_settings": [
    {
      "name": "code",
      "title": "Code",
      "description": "Enter Javascript code here, It will receive the data in the middle column, can emit `track()` and `traits()`. Preview results on the right. Save when finished",
      "type": "string",
      "default": "//console.log(\"Hello !\");\n//hull.asUser({ email: body.email }).traits({ coconuts: 12 });\n//hull.asUser({ email: body.email }).track(\"sample event\");",
      "format": "hidden"
    },
    {
      "name": "variables",
      "title": "Custom Variables",
      "description": "Define custom variables here. usually things you don't want to save in the Connector's code, such as API Keys, or values you want to allow non-technical users to be able to update. A variable you define as `foo` Will be available as `variables.foo` in the code editor. Only Strings are supported here",
      "type": "array",
      "format": "table",
      "items": {
        "type": "object",
        "properties": {
          "key": {
            "title": "Variable Name",
            "placeholder": "Variable Name",
            "type": "string",
            "format": "string"
          },
          "value": {
            "title": "Value",
            "placeholder": "Variable Value",
            "type": "string",
            "format": "string"
          }
        }
      },
      "default": []
    }
  ],
  "resources": [],
  "subscriptions": [],
  "settings_sections": [
    {
      "title": "Incoming Webhook URL",
      "description": "Send a POST request to the URL below to start capturing data, Then open the Code editor to write logic on how to ingest it",
      "step": "credentials",
      "properties": ["json.credentials"]
    },
    {
      "title": "Configuration",
      "description": "Configure the way the connector runs",
      "properties": ["private_settings.variables"]
    }
  ],
  "json": [
    {
      "url": "/recent",
      "handler": "getRecent",
      "options": {
        "cacheContextFetch": false
      }
    },
    {
      "url": "/config",
      "handler": "configHandler",
      "options": {
        "cacheContextFetch": false
      }
    },
    {
      "url": "/url",
      "name": "credentials",
      "format": "credentials",
      "title": "Webhook URL",
      "description": "Set your external service to send POST webhooks to this url",
      "handler": "credentialsHandler",
      "options": {
        "cacheContextFetch": false
      }
    },
    {
      "url": "/preview",
      "handler": "previewHandler",
      "options": {
        "cacheContextFetch": false
      }
    }
  ],
  "incoming": [
    {
      "url": "/webhooks/:connectorId/:token",
      "handler": "incomingHandler",
      "options": {
        "bodyParser": "json"
      }
    },
    {
      "url": "/webhooks/:connectorId",
      "handler": "incomingHandler",
      "options": {
        "bodyParser": "json"
      }
    }
  ],
  "schedules": [
    {
      "url": "/remove-old-webhooks",
      "type": "interval",
      "value": "15",
      "handler": "removeOldEntriesHandler"
    }
  ],
  "status": {
    "initial_value": "setupRequired",
    "url": "/status",
    "type": "cron",
    "value": "*/30 * * * *",
    "handler": "statusHandler"
  },
  "statuses": [
    {
      "url": "/status",
      "type": "cron",
      "value": "*/30 * * * *",
      "handler": "statusHandler"
    }
  ]
}
